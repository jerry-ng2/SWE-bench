{
  "instance_id": "pylint-dev__pylint-7228",
  "instance_idx": 165,
  "repo": "pylint-dev/pylint",
  "status": "completed",
  "cursor_response": "",
  "files_modified": [
    "pylint/config/argument.py"
  ],
  "git_diff": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 3c2951517..a5e74e938 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -99,11 +99,20 @@ def _py_version_transformer(value: str) -> tuple[int, ...]:\n     return version\n \n \n+def _regex_transformer(value: str) -> Pattern[str]:\n+    \"\"\"Return `re.compile(value)`.\"\"\"\n+    try:\n+        return re.compile(value)\n+    except re.error as e:\n+        msg = f\"Error in provided regular expression: {value} beginning at index {e.pos}: {e.msg}\"\n+        raise argparse.ArgumentTypeError(msg)\n+\n+\n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n     \"\"\"Transforms a comma separated list of regular expressions.\"\"\"\n     patterns: list[Pattern[str]] = []\n     for pattern in _csv_transformer(value):\n-        patterns.append(re.compile(pattern))\n+        patterns.append(_regex_transformer(pattern))\n     return patterns\n \n \n@@ -111,13 +120,12 @@ def _regexp_paths_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n     \"\"\"Transforms a comma separated list of regular expressions paths.\"\"\"\n     patterns: list[Pattern[str]] = []\n     for pattern in _csv_transformer(value):\n-        patterns.append(\n-            re.compile(\n-                str(pathlib.PureWindowsPath(pattern)).replace(\"\\\\\", \"\\\\\\\\\")\n-                + \"|\"\n-                + pathlib.PureWindowsPath(pattern).as_posix()\n-            )\n+        path_pattern = (\n+            str(pathlib.PureWindowsPath(pattern)).replace(\"\\\\\", \"\\\\\\\\\")\n+            + \"|\"\n+            + pathlib.PureWindowsPath(pattern).as_posix()\n         )\n+        patterns.append(_regex_transformer(path_pattern))\n     return patterns\n \n \n@@ -130,7 +138,7 @@ _TYPE_TRANSFORMERS: dict[str, Callable[[str], _ArgumentTypes]] = {\n     \"non_empty_string\": _non_empty_string_transformer,\n     \"path\": _path_transformer,\n     \"py_version\": _py_version_transformer,\n-    \"regexp\": re.compile,\n+    \"regexp\": _regex_transformer,\n     \"regexp_csv\": _regexp_csv_transfomer,\n     \"regexp_paths_csv\": _regexp_paths_csv_transfomer,\n     \"string\": pylint_utils._unquote,\n",
  "notes": "",
  "time_spent_minutes": 13,
  "difficulty_rating": "medium",
  "success_rating": "success"
}